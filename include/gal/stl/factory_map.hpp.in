{{ include_block_open }}

#include <gal/stl/factory.hpp>
#include <gal/stl/object_map.hpp> // gal/stl/object_map.hpp.in

{{ namespace_open }}

class factory_map:
	public gal::stl::object_map<long int>
{
public:
	typedef gal::stl::object_map<long int>	OM;

	template<typename T>
	std::shared_ptr< gal::stl::factory<T> >		create()
	{
		typedef gal::stl::factory<T>	F;
		typedef std::shared_ptr< gal::stl::factory<T> >	S;
		
		S s(new F);
		
		add<T>(s);

		return s;
	}
	template<typename T>
	void			add(
			std::shared_ptr< gal::stl::factory<T> > f)
	{
		long int k = typeid(T).hash_code();
		
		typedef std::shared_ptr< gal::stl::object__<T> > S_O;

		S_O o(f);

		OM::add(k, o);
	}
	template<typename T>
	std::shared_ptr< gal::stl::factory<T> >		find()
	{
		typedef object__<T>		O;
		typedef gal::stl::factory<T>	F;
		
		auto o = OM::find<T>();

		auto f = std::dynamic_pointer_cast<F>(o);

		return f;
	}
};

	
{{ namespace_close }}

{{ include_block_close }}



